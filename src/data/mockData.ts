// Mock data for development and testing
import { MenuItem, Customization } from '../store/customizationStore';
// Menu items with branchId linking
export const mockCustomizations: Customization[] = [
  { id: 'c1', branchId: '1', name: 'Extra Cheese - Cheddar', price: 1.5, options: [], createdAt: new Date().toISOString() },
  { id: 'c2', branchId: '1', name: 'Extra Cheese - Swiss', price: 1.5, options: [], createdAt: new Date().toISOString() },
  { id: 'c3', branchId: '1', name: 'Extra Cheese - Blue Cheese', price: 2, options: [], createdAt: new Date().toISOString() },
  { id: 'c4', branchId: '1', name: 'Add Bacon', price: 2.5, options: [], createdAt: new Date().toISOString() },
  { id: 'c5', branchId: '1', name: 'Add Avocado', price: 2, options: [], createdAt: new Date().toISOString() },
  { id: 'c6', branchId: '1', name: 'Add Fried Egg', price: 1.5, options: [], createdAt: new Date().toISOString() },
  { id: 'c7', branchId: '1', name: 'Milk Tea Sweetness 0%', price: 0, options: [], createdAt: new Date().toISOString() },
  { id: 'c8', branchId: '1', name: 'Milk Tea Sweetness 25%', price: 0, options: [], createdAt: new Date().toISOString() },
  { id: 'c9', branchId: '1', name: 'Milk Tea Toppings - Pearls', price: 0.75, options: [], createdAt: new Date().toISOString() },
  { id: 'c10', branchId: '1', name: 'Milk Tea Toppings - Pudding', price: 0.75, options: [], createdAt: new Date().toISOString() },
];

export const mockMenuItems: MenuItem[] = [
  {
    id: '1',
    branchId: '1',
    name: 'Beef Burger',
    description: 'Angus beef patty with cheese, lettuce, and tomato',
    price: 16.99,
    category: 'Main Course',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: true,
    createdAt: new Date().toISOString(),
    customizations: mockCustomizations.filter(c => ['c1','c2','c3','c4','c5','c6'].includes(c.id))
  },
  {
    id: '2',
    branchId: '1',
    name: 'Classic Milk Tea',
    description: 'Traditional milk tea with black tea base',
    price: 5.99,
    category: 'Milk Tea',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: true,
    createdAt: new Date().toISOString(),
    customizations: mockCustomizations.filter(c => ['c7','c8','c9','c10'].includes(c.id))
  },
  {
    id: '3',
    branchId: '1',
    name: 'Grilled Salmon',
    description: 'Fresh Atlantic salmon with herbs and lemon',
    price: 24.99,
    category: 'Main Course',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: false,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '4',
    branchId: '1',
    name: 'Caesar Salad',
    description: 'Crispy romaine lettuce with parmesan and croutons',
    price: 12.99,
    category: 'Salad',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: true,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '5',
    branchId: '1',
    name: 'Pasta Carbonara',
    description: 'Classic Italian pasta with bacon and parmesan',
    price: 18.99,
    category: 'Main Course',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: false,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '6',
    branchId: '1',
    name: 'Margherita Pizza',
    description: 'Fresh mozzarella, basil, and tomato sauce',
    price: 14.99,
    category: 'Main Course',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: false,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '7',
    branchId: '1',
    name: 'Chocolate Lava Cake',
    description: 'Warm chocolate cake with vanilla ice cream',
    price: 8.99,
    category: 'Dessert',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: false,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '8',
    branchId: '1',
    name: 'Tiramisu',
    description: 'Italian coffee-flavored dessert',
    price: 9.99,
    category: 'Dessert',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: false,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '9',
    branchId: '1',
    name: 'Spicy Tuna Roll',
    description: 'Fresh tuna with spicy mayo and cucumber',
    price: 14.99,
    category: 'Sushi',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: true,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '10',
    branchId: '1',
    name: 'Pad Thai',
    description: 'Thai stir-fried noodles with shrimp and peanuts',
    price: 16.99,
    category: 'Main Course',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: true,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '11',
    branchId: '1',
    name: 'Beef Pho',
    description: 'Vietnamese noodle soup with tender beef',
    price: 15.99,
    category: 'Main Course',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: true,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '12',
    branchId: '1',
    name: 'Miso Ramen',
    description: 'Japanese ramen with miso broth and pork',
    price: 17.99,
    category: 'Main Course',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: false,
    createdAt: new Date().toISOString(),
    customizations: []
  },
  {
    id: '13',
    branchId: '1',
    name: 'Dragon Roll',
    description: 'Eel and avocado sushi roll',
    price: 18.99,
    category: 'Sushi',
    imageUrl: '/placeholder.svg',
    available: true,
    bestSeller: true,
    createdAt: new Date().toISOString(),
    customizations: []
  }
];


// Tables with branchId linking - with reservation data
export const mockTables = [
  // Downtown Branch tables
  { 
    id: '1', 
    branchId: '1', 
    number: 1, 
    capacity: 2, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR001',
    createdAt: new Date().toISOString()
  },
  { 
    id: '2', 
    branchId: '1', 
    number: 2, 
    capacity: 4, 
    floor: 1,
    status: 'occupied', 
    qrCode: 'QR002',
    reservationStart: new Date(Date.now() + 3600000).toISOString(),
    reservationEnd: new Date(Date.now() + 7200000).toISOString(),
    reservationName: 'John Smith',
    createdAt: new Date().toISOString()
  },
  { 
    id: '3', 
    branchId: '1', 
    number: 3, 
    capacity: 4, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR003',
    createdAt: new Date().toISOString()
  },
  { 
    id: '4', 
    branchId: '1', 
    number: 4, 
    capacity: 6, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR004',
    createdAt: new Date().toISOString()
  },
  { 
    id: '5', 
    branchId: '1', 
    number: 5, 
    capacity: 2, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR005',
    createdAt: new Date().toISOString()
  },
  { 
    id: '6', 
    branchId: '1', 
    number: 6, 
    capacity: 8, 
    floor: 2,
    status: 'occupied', 
    qrCode: 'QR006',
    reservationStart: new Date(Date.now() - 1800000).toISOString(),
    reservationEnd: new Date(Date.now() + 5400000).toISOString(),
    reservationName: 'Sarah Johnson',
    createdAt: new Date().toISOString()
  },
  // Westside Branch tables
  { 
    id: '11', 
    branchId: '2', 
    number: 1, 
    capacity: 4, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR011',
    createdAt: new Date().toISOString()
  },
  { 
    id: '12', 
    branchId: '2', 
    number: 2, 
    capacity: 4, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR012',
    createdAt: new Date().toISOString()
  },
  { 
    id: '13', 
    branchId: '2', 
    number: 3, 
    capacity: 6, 
    floor: 1,
    status: 'occupied', 
    qrCode: 'QR013',
    reservationStart: new Date(Date.now() + 1800000).toISOString(),
    reservationEnd: new Date(Date.now() + 9000000).toISOString(),
    reservationName: 'David Brown',
    createdAt: new Date().toISOString()
  },
  { 
    id: '14', 
    branchId: '2', 
    number: 4, 
    capacity: 2, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR014',
    createdAt: new Date().toISOString()
  },
  { 
    id: '15', 
    branchId: '2', 
    number: 5, 
    capacity: 8, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR015',
    createdAt: new Date().toISOString()
  },
  // Artisan Coffee House - Main (id: '6') tables
  { 
    id: '21', 
    branchId: '6', 
    number: 1, 
    capacity: 2, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR021',
    createdAt: new Date().toISOString()
  },
  { 
    id: '22', 
    branchId: '6', 
    number: 2, 
    capacity: 2, 
    floor: 1,
    status: 'occupied', 
    qrCode: 'QR022',
    reservationStart: new Date(Date.now() + 1800000).toISOString(),
    reservationEnd: new Date(Date.now() + 5400000).toISOString(),
    reservationName: 'Emma Wilson',
    createdAt: new Date().toISOString()
  },
  { 
    id: '23', 
    branchId: '6', 
    number: 3, 
    capacity: 4, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR023',
    createdAt: new Date().toISOString()
  },
  { 
    id: '24', 
    branchId: '6', 
    number: 4, 
    capacity: 4, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR024',
    createdAt: new Date().toISOString()
  },
  { 
    id: '25', 
    branchId: '6', 
    number: 5, 
    capacity: 6, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR025',
    createdAt: new Date().toISOString()
  },
  { 
    id: '26', 
    branchId: '6', 
    number: 6, 
    capacity: 2, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR026',
    createdAt: new Date().toISOString()
  },
  { 
    id: '27', 
    branchId: '6', 
    number: 7, 
    capacity: 8, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR027',
    createdAt: new Date().toISOString()
  },
  // Artisan Coffee House - Harbor (id: '7') tables
  { 
    id: '31', 
    branchId: '7', 
    number: 1, 
    capacity: 2, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR031',
    createdAt: new Date().toISOString()
  },
  { 
    id: '32', 
    branchId: '7', 
    number: 2, 
    capacity: 4, 
    floor: 1,
    status: 'available', 
    qrCode: 'QR032',
    createdAt: new Date().toISOString()
  },
  { 
    id: '33', 
    branchId: '7', 
    number: 3, 
    capacity: 4, 
    floor: 1,
    status: 'occupied', 
    qrCode: 'QR033',
    reservationStart: new Date(Date.now() - 600000).toISOString(),
    reservationEnd: new Date(Date.now() + 3600000).toISOString(),
    reservationName: 'Oliver Thompson',
    createdAt: new Date().toISOString()
  },
  { 
    id: '34', 
    branchId: '7', 
    number: 4, 
    capacity: 6, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR034',
    createdAt: new Date().toISOString()
  },
  { 
    id: '35', 
    branchId: '7', 
    number: 5, 
    capacity: 2, 
    floor: 2,
    status: 'available', 
    qrCode: 'QR035',
    createdAt: new Date().toISOString()
  },
];

// Orders with branchId linking
export const mockOrders = [
  // Downtown Branch
  {
    id: '1001',
    areaTableId: '3',
    status: 'pending',
    totalPrice: 62.97,
    createdAt: new Date(Date.now() - 120000).toISOString(),
    orderLines: [
      {
        id: 'line-1001-1',
        orderLineStatus: 'pending',
        createdAt: new Date(Date.now() - 120000).toISOString(),
        items: [
          {
            id: 'item-1001-1',
            menuItemId: 'menu-001',
            name: 'Grilled Salmon',
            quantity: 2,
            totalPrice: 24.99 * 2,
          },
          {
            id: 'item-1001-2',
            menuItemId: 'menu-002',
            name: 'Caesar Salad',
            quantity: 1,
            totalPrice: 12.99,
          },
        ],
      },
    ],
  },
  {
    id: '1002',
    areaTableId: '6',
    status: 'preparing',
    totalPrice: 88.95,
    createdAt: new Date(Date.now() - 300000).toISOString(),
    orderLines: [
      {
        id: 'line-1002-1',
        orderLineStatus: 'preparing',
        createdAt: new Date(Date.now() - 300000).toISOString(),
        items: [
          {
            id: 'item-1002-1',
            menuItemId: 'menu-003',
            name: 'Beef Burger',
            quantity: 3,
            totalPrice: 16.99 * 3,
          },
          {
            id: 'item-1002-2',
            menuItemId: 'menu-004',
            name: 'Pasta Carbonara',
            quantity: 2,
            totalPrice: 18.99 * 2,
          },
        ],
      },
    ],
  },

  // Westside Branch
  {
    id: '1011',
    areaTableId: '3',
    status: 'pending',
    totalPrice: 57.97,
    createdAt: new Date(Date.now() - 180000).toISOString(),
    orderLines: [
      {
        id: 'line-1011-1',
        orderLineStatus: 'pending',
        createdAt: new Date(Date.now() - 180000).toISOString(),
        items: [
          {
            id: 'item-1011-1',
            menuItemId: 'menu-005',
            name: 'BBQ Ribs',
            quantity: 2,
            totalPrice: 22.99 * 2,
          },
          {
            id: 'item-1011-2',
            menuItemId: 'menu-006',
            name: 'Greek Salad',
            quantity: 1,
            totalPrice: 11.99,
          },
        ],
      },
    ],
  },

  // Fusion Bistro
  {
    id: '1021',
    areaTableId: '1',
    status: 'pending',
    totalPrice: 48.97,
    createdAt: new Date(Date.now() - 150000).toISOString(),
    orderLines: [
      {
        id: 'line-1021-1',
        orderLineStatus: 'pending',
        createdAt: new Date(Date.now() - 150000).toISOString(),
        items: [
          {
            id: 'item-1021-1',
            menuItemId: 'menu-007',
            name: 'Spicy Tuna Roll',
            quantity: 2,
            totalPrice: 14.99 * 2,
          },
          {
            id: 'item-1021-2',
            menuItemId: 'menu-008',
            name: 'Dragon Roll',
            quantity: 1,
            totalPrice: 18.99,
          },
        ],
      },
    ],
  },
  {
    id: '1022',
    areaTableId: '2',
    status: 'completed',
    totalPrice: 49.97,
    createdAt: new Date(Date.now() - 280000).toISOString(),
    orderLines: [
      {
        id: 'line-1022-1',
        orderLineStatus: 'completed',
        createdAt: new Date(Date.now() - 280000).toISOString(),
        items: [
          {
            id: 'item-1022-1',
            menuItemId: 'menu-009',
            name: 'Pad Thai',
            quantity: 2,
            totalPrice: 16.99 * 2,
          },
          {
            id: 'item-1022-2',
            menuItemId: 'menu-010',
            name: 'Beef Pho',
            quantity: 1,
            totalPrice: 15.99,
          },
        ],
      },
    ],
  },

  // Artisan Coffee House
  {
    id: '1051',
    areaTableId: '1',
    status: 'completed',
    totalPrice: 17.96,
    createdAt: new Date(Date.now() - 100000).toISOString(),
    orderLines: [
      {
        id: 'line-1051-1',
        orderLineStatus: 'completed',
        createdAt: new Date(Date.now() - 100000).toISOString(),
        items: [
          {
            id: 'item-1051-1',
            menuItemId: 'menu-011',
            name: 'Signature Espresso',
            quantity: 2,
            totalPrice: 4.99 * 2,
          },
          {
            id: 'item-1051-2',
            menuItemId: 'menu-012',
            name: 'Croissant',
            quantity: 2,
            totalPrice: 3.99 * 2,
          },
        ],
      },
    ],
  },
];


// Staff with branchId linking
export const mockStaff = [
  // Downtown Branch staff
  {
    id: '3',
    name: 'Michael Brown',
    username: 'michael',
    email: 'michael.brown@restaurant.com',
    role: 'branch_manager',
    branchId: '1',
    status: 'active',
  },
  // Westside Branch staff
  {
    id: '13',
    name: 'Lisa Chen',
    username: 'lisa',
    email: 'lisa.chen@restaurant.com',
    role: 'branch_manager',
    branchId: '2',
    status: 'active',
  },
  // Waiters
  {
    id: '201',
    name: 'Jane Williams',
    username: 'jane',
    email: 'waiter.jane@restaurant.com',
    role: 'waiter',
    branchId: '1',
    status: 'active',
  },
  {
    id: '202',
    name: 'Tom Anderson',
    username: 'tom',
    email: 'waiter.tom@restaurant.com',
    role: 'waiter',
    branchId: '1',
    status: 'active',
  },
  // Receptionists
  {
    id: '301',
    name: 'Mary Johnson',
    username: 'mary',
    email: 'receptionist.mary@restaurant.com',
    role: 'receptionist',
    branchId: '1',
    status: 'active',
  },
  {
    id: '302',
    name: 'Peter Davis',
    username: 'peter',
    email: 'receptionist.peter@restaurant.com',
    role: 'receptionist',
    branchId: '1',
    status: 'active',
  },
  // Artisan Coffee House - Main staff
  {
    id: '401',
    name: 'Sofia Rodriguez',
    username: 'sofia',
    email: 'waiter.sofia@artisancoffee.com',
    role: 'waiter',
    branchId: '6',
    status: 'active',
  },
  {
    id: '402',
    name: 'James Lee',
    username: 'james',
    email: 'waiter.james@artisancoffee.com',
    role: 'waiter',
    branchId: '6',
    status: 'active',
  },
  {
    id: '501',
    name: 'Emily Parker',
    username: 'emily',
    email: 'receptionist.emily@artisancoffee.com',
    role: 'receptionist',
    branchId: '6',
    status: 'active',
  },
  // Artisan Coffee House - Harbor staff
  {
    id: '411',
    name: 'Lucas Brown',
    username: 'lucas',
    email: 'waiter.lucas@artisancoffee.com',
    role: 'waiter',
    branchId: '7',
    status: 'active',
  },
  {
    id: '511',
    name: 'Olivia White',
    username: 'olivia',
    email: 'receptionist.olivia@artisancoffee.com',
    role: 'receptionist',
    branchId: '7',
    status: 'active',
  },
];

export const mockBranches = [
  {
    id: '1',
    name: 'Downtown Branch',
    shortCode: 'downtown',
    address: '123 Main Street, City Center',
    phone: '+1 234 567 8900',
    email: 'downtown@restaurant.com',
    status: 'active',
    managerId: '3',
    brandName: 'The Gourmet Kitchen',
    tagline: 'Fine dining at its best',
    description: 'Experience culinary excellence in the heart of downtown',
    logoUrl: null,
    bannerUrl: null,
    ownerId: '100',
    packageType: 'free' as const,
    layout: 'free',
    gradientFrom: '217 91% 60%',
    gradientTo: '290 70% 60%',
    gradientDirection: 'to-r',
    aboutSection1Title: 'Our Story',
    aboutSection1Text: 'Since 2010, we have been serving the finest dishes in downtown.',
    aboutSection1Image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?w=800&q=80',
    aboutSection2Title: 'Our Commitment',
    aboutSection2Text: 'Quality ingredients and exceptional service, every single day.',
    aboutSection2Image: 'https://images.unsplash.com/photo-1504674900247-0877df9cc836?w=800&q=80',
  },
  {
    id: '2',
    name: 'Westside Branch',
    shortCode: 'westside',
    address: '456 West Avenue, Westside',
    phone: '+1 234 567 8901',
    email: 'westside@restaurant.com',
    status: 'active',
    managerId: '13',
    brandName: 'The Gourmet Kitchen',
    tagline: 'Fresh flavors, west side style',
    description: 'Your neighborhood favorite for exceptional dining',
    logoUrl: null,
    bannerUrl: null,
    ownerId: '100',
    packageType: 'default' as const,
  },
  {
    id: '3',
    name: 'Fusion Bistro - Main',
    shortCode: 'fusion-main',
    address: '789 Culinary Avenue, Midtown',
    phone: '+1 234 567 8902',
    email: 'main@fusionbistro.com',
    status: 'active',
    managerId: null,
    brandName: 'Fusion Bistro',
    tagline: 'Where East meets West',
    description: 'Experience the perfect blend of Asian and European flavors',
    logoUrl: null,
    bannerUrl: null,
    ownerId: '100',
    packageType: 'pro' as const,
  },
  {
    id: '4',
    name: 'Fusion Bistro - Uptown',
    shortCode: 'fusion-uptown',
    address: '321 Uptown Plaza, North District',
    phone: '+1 234 567 8903',
    email: 'uptown@fusionbistro.com',
    status: 'active',
    managerId: null,
    brandName: 'Fusion Bistro',
    tagline: 'Modern fusion dining',
    description: 'Innovative cuisine in an elegant setting',
    logoUrl: null,
    bannerUrl: null,
    ownerId: '100',
    packageType: 'pro' as const,
  },
  {
    id: '5',
    name: 'Urban Eats Central',
    shortCode: 'urban-central',
    address: '555 Metropolitan Ave, Downtown',
    phone: '+1 234 567 8904',
    email: 'central@urbaneats.com',
    status: 'active',
    managerId: null,
    brandName: 'Urban Eats',
    tagline: 'Contemporary dining redefined',
    description: 'Experience modern urban cuisine at its finest',
    logoUrl: null,
    bannerUrl: null,
    ownerId: '100',
    packageType: 'enterprise' as const,
  },
  {
    id: '6',
    name: 'Artisan Coffee House - Main',
    shortCode: 'artisan-main',
    address: '888 Creative District, Arts Quarter',
    phone: '+1 234 567 8905',
    email: 'main@artisancoffee.com',
    status: 'active',
    managerId: null,
    brandName: 'Artisan Coffee House',
    tagline: 'Crafted with passion, served with love',
    description: 'Premium coffee experience with artisanal pastries and live music',
    logoUrl: null,
    bannerUrl: null,
    ownerId: '100',
    packageType: 'enterprise' as const,
    layout: 'free',
    gradientFrom: '43 74% 66%',
    gradientTo: '346 77% 58%',
    gradientDirection: 'to-r',
    aboutSection1Title: 'Our Story',
    aboutSection1Text: 'Founded in 2015, Artisan Coffee House began with a simple dream: to create a space where quality coffee meets community. Every cup is crafted with single-origin beans, roasted in-house to perfection.',
    aboutSection1Image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?w=800&q=80',
    aboutSection2Title: 'Our Philosophy',
    aboutSection2Text: 'We believe in sustainable sourcing, ethical farming, and supporting local artisans. From our pastries to our music events, everything reflects our commitment to quality and community connection.',
    aboutSection2Image: 'https://images.unsplash.com/photo-1501339847302-ac426a4a7cbb?w=800&q=80',
  },
  {
    id: '7',
    name: 'Artisan Coffee House - Harbor',
    shortCode: 'artisan-harbor',
    address: '123 Harbor View, Waterfront',
    phone: '+1 234 567 8906',
    email: 'harbor@artisancoffee.com',
    status: 'active',
    managerId: null,
    brandName: 'Artisan Coffee House',
    tagline: 'Waterfront coffee sanctuary',
    description: 'Enjoy premium coffee with stunning harbor views',
    logoUrl: null,
    bannerUrl: null,
    ownerId: '100',
    packageType: 'enterprise' as const,
  },
];

export const mockPromotions = [
  {
    id: '1',
    name: 'Happy Hour Special',
    description: '20% off all appetizers between 3-6 PM',
    discountPercent: 20,
    startDate: '2025-01-01',
    endDate: '2025-12-31',
    status: 'active',
  },
  {
    id: '2',
    name: 'Weekend Brunch Deal',
    description: 'Buy 2 main courses, get 1 dessert free',
    discountPercent: 0,
    startDate: '2025-01-01',
    endDate: '2025-12-31',
    status: 'active',
  },
];

export const mockMembers = [
  {
    id: '1',
    name: 'Alice Williams',
    email: 'alice.w@email.com',
    phone: '+1 234 567 8910',
    points: 1250,
    membershipTier: 'Gold',
    joinDate: '2024-03-15',
  },
  {
    id: '2',
    name: 'Bob Martinez',
    email: 'bob.m@email.com',
    phone: '+1 234 567 8911',
    points: 580,
    membershipTier: 'Silver',
    joinDate: '2024-06-20',
  },
  {
    id: '3',
    name: 'Carol Davis',
    email: 'carol.d@email.com',
    phone: '+1 234 567 8912',
    points: 2340,
    membershipTier: 'Platinum',
    joinDate: '2023-11-10',
  },
];

// Mock brands for restaurant chains
export const mockBrands = [
  {
    id: '1',
    name: 'The Gourmet Kitchen',
    description: 'Fine dining experience with international cuisine',
    totalBranches: 5,
    status: 'active',
    established: '2015',
    ownerId: '100',
    packageType: 'default' as const,
  },
  {
    id: '2',
    name: 'Quick Bites Express',
    description: 'Fast casual dining with fresh ingredients',
    totalBranches: 12,
    status: 'active',
    established: '2018',
    ownerId: '100',
    packageType: 'pro' as const,
  },
  {
    id: '3',
    name: 'Seafood Paradise',
    description: 'Premium seafood and coastal cuisine',
    totalBranches: 3,
    status: 'active',
    established: '2020',
    ownerId: '100',
    packageType: 'enterprise' as const,
  },
  {
    id: '4',
    name: 'Fusion Bistro',
    description: 'Modern fusion cuisine blending East and West',
    totalBranches: 2,
    status: 'active',
    established: '2022',
    ownerId: '100',
    packageType: 'pro' as const,
  },
  {
    id: '5',
    name: 'Urban Eats',
    description: 'Contemporary urban dining experience',
    totalBranches: 1,
    status: 'active',
    established: '2023',
    ownerId: '100',
    packageType: 'enterprise' as const,
  },
  {
    id: '6',
    name: 'Artisan Coffee House',
    description: 'Premium coffee experience with artisanal pastries',
    totalBranches: 2,
    status: 'active',
    established: '2024',
    ownerId: '100',
    packageType: 'enterprise' as const,
  },
];

// Mock owner statistics
export const mockOwnerStats = {
  totalRevenue: 487650,
  revenueGrowth: 12.5,
  totalOrders: 8943,
  ordersGrowth: 8.2,
  activeCustomers: 2847,
  customerGrowth: 15.3,
  avgOrderValue: 54.50,
  branchPerformance: [
    { name: 'Downtown Branch', revenue: 185000, percentage: 38 },
    { name: 'Westside Branch', revenue: 145000, percentage: 30 },
    { name: 'Eastside Branch', revenue: 97000, percentage: 20 },
    { name: 'Northside Branch', revenue: 60650, percentage: 12 },
  ],
};

// Add mock users for authentication
export const mockUsers = [
  {
    id: '1',
    email: 'customer@gmail.com',
    password: 'customerpass',
    name: 'Customer User',
    role: 'customer',
    avatar: undefined,
  },
  {
    id: '3',
    email: 'admin@gmail.com',
    password: 'adminpass',
    name: 'Admin User',
    role: 'admin',
    avatar: undefined,
  },
  // Branch managers
  {
    id: '13',
    email: 'lisa.chen@restaurant.com',
    password: 'managerpass',
    name: 'Lisa Chen',
    role: 'branch_manager',
    branchId: '2',
    avatar: undefined,
  },
  // Demo manager for Downtown Branch (if needed)
  {
    id: '2',
    email: 'manager@restaurant.com',
    password: 'managerpass',
    name: 'Manager User',
    role: 'branch_manager',
    branchId: '1',
    avatar: undefined,
  },
  // Owner
  {
    id: '100',
    email: 'owner.multi@example.com',
    name: 'Multi Branch Owner',
    role: 'owner',
    avatar: undefined,
    password: 'owner123',
  },
  // Waiters - Downtown Branch
  {
    id: '201',
    email: 'waiter.jane@restaurant.com',
    password: 'waiterpass',
    name: 'Jane Williams',
    role: 'waiter',
    branchId: '1',
    avatar: undefined,
  },
  {
    id: '202',
    email: 'waiter.tom@restaurant.com',
    password: 'waiterpass',
    name: 'Tom Anderson',
    role: 'waiter',
    branchId: '1',
    avatar: undefined,
  },
  // Receptionists - Downtown Branch
  {
    id: '301',
    email: 'receptionist.mary@restaurant.com',
    password: 'receptionistpass',
    name: 'Mary Johnson',
    role: 'receptionist',
    branchId: '1',
    avatar: undefined,
  },
  {
    id: '302',
    email: 'receptionist.peter@restaurant.com',
    password: 'receptionistpass',
    name: 'Peter Davis',
    role: 'receptionist',
    branchId: '1',
    avatar: undefined,
  },
  // Waiters - Westside Branch
  {
    id: '211',
    email: 'waiter.alex@restaurant.com',
    password: 'waiterpass',
    name: 'Alex Martinez',
    role: 'waiter',
    branchId: '2',
    avatar: undefined,
  },
  // Receptionists - Westside Branch
  {
    id: '311',
    email: 'receptionist.sophie@restaurant.com',
    password: 'receptionistpass',
    name: 'Sophie Taylor',
    role: 'receptionist',
    branchId: '2',
    avatar: undefined,
  },
];



// Valid user roles
export const userRoles = ['owner', 'admin', 'branch_manager', 'waiter', 'receptionist', 'guest'] as const;
export type UserRole = typeof userRoles[number];